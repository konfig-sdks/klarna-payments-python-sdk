# coding: utf-8

"""
    Klarna Payments API V1

    The payments API is used to create a session to offer Klarna's payment methods as part of your checkout. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).  **Note:** Examples provided in this section includes full payloads, including all supported fields , required and optionals. In order to implement a best in class request we recommend you don't include customer details when initiating a payment session. Refer to [Initiate a payment](https://docs.klarna.com/klarna-payments/integrate-with-klarna-payments/step-1-initiate-a-payment/) section for further details.  Read more on [Klarna payments](https://docs.klarna.com/klarna-payments/).

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel


class Options(BaseModel):
    # Color for the border of elements within the iFrame. Value should be a CSS hex color, e.g. \"#FF9900\"
    color_border: typing.Optional[str] = Field(None, alias='color_border')

    # Color for the border of elements within the iFrame when selected by the customer. Value should be a CSS hex color, e.g. \"#FF9900\"
    color_border_selected: typing.Optional[str] = Field(None, alias='color_border_selected')

    # Color for the bullet points within the iFrame. Value should be a CSS hex color, e.g. \"#FF9900\"
    color_details: typing.Optional[str] = Field(None, alias='color_details')

    # Color for the texts within the iFrame. Value should be a CSS hex color, e.g. \"#FF9900\"
    color_text: typing.Optional[str] = Field(None, alias='color_text')

    # Radius for the border of elements within the iFrame.
    radius_border: typing.Optional[str] = Field(None, alias='radius_border')
    class Config:
        arbitrary_types_allowed = True
